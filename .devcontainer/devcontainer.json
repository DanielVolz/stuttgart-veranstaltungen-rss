// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/debian
{
	"name": "Python 3.9",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/python:0-3.9",
	"features": {
		// "ghcr.io/devcontainers/features/common-utils:2": {
		// 	"installZsh": "true",
		// 	"username": "vscode",
		// 	"userUid": "1001",
		// 	"userGid": "1001",
		// 	"upgradePackages": "true"
		// },
		"ghcr.io/devcontainers-contrib/features/bandit:2": {
			"version": "latest"
		},
		"ghcr.io/devcontainers-contrib/features/black:2": {
			"version": "latest"
		},
		"ghcr.io/devcontainers-contrib/features/flake8:2": {
			"version": "latest",
			"plugins": "flake8-black flake8-isort flake8-print flake8-bandit flake8-pylint flake8-builtins flake8-spellcheck flake8-pytest-style"
		},
		"ghcr.io/devcontainers-contrib/features/pylint:2": {
			"version": "latest"
		},
		"ghcr.io/devcontainers-contrib/features/neovim-apt-get:1": {
			"version": "latest"
		}
	},
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-python.black-formatter",
				"streetsidesoftware.code-spell-checker",
				"ms-python.flake8",
				"streetsidesoftware.code-spell-checker-german",
				"github.vscode-github-actions",
				"codezombiech.gitignore",
				"eamodio.gitlens",
				"VisualStudioExptTeam.vscodeintellicode",
				"ms-python.isort",
				"yzhang.markdown-all-in-one",
				"shd101wyy.markdown-preview-enhanced",
				"christian-kohler.path-intellisense",
				"ms-python.vscode-pylance",
				"ms-python.pylint",
				"ms-python.python"
			],
			"settings": {
				"python.defaultInterpreterPath": "/usr/local/bin/python",
				"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
				"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
				"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
				"python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
				"editor.codeActionsOnSave": {
					"source.organizeImports": true
				},
				"python.linting.enabled": true,
				"python.linting.pylintEnabled": true,
				"python.linting.flake8Enabled": true,
				"python.linting.banditEnabled": true,
				"python.linting.lintOnSave": true,
				"python.formatting.provider": "black",
				"editor.formatOnSave": true,
				"pylint.args": [
					"--max-line-length=200",
					"--disable=C0114,C0115",
					"--preview",
					"--good-names=e,f,i,j,k,l"
				],
				"python.linting.banditArgs": [
					"-ll",
					"-s",
					"B101,B110"
				],
				"python.formatting.blackArgs": [
					"--line-length",
					"88",
					"--preview"
				],
				"flake8.args": [
					"--max-line-length=200",
					"--ignore=E203,W503",
					"--show-source"
				],
				"isort.args": [
					"--profile",
					"black"
				],
				"isort.check": true,
				"keyboard.layout": "com.apple.keylayout.German",
				"cSpell.language": "en, de-DE",
				"python.analysis.completeFunctionParens": true,
				"python.analysis.autoImportCompletions": true,
				"python.analysis.autoFormatStrings": true
			}
		}
	},
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "pip3 install --user -r requirements.txt",
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	"remoteUser": "vscode"
}